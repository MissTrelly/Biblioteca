@page "/prestamos"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioPrestamos _repositorio;
<h3>Prestamos</h3>
<a class="btn btn-success" href="prestamos/nuevo">Agregar préstamo</a>
@if (_prestamos == null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
}
else if (_prestamos.Count == 0)
{
    <h3>No existen préstamos registrados</h3>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Estudiante</th>
                <th>Libro</th>
                <th>Fecha del Préstamo</th>
                <th>Fecha de Devolución</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Prestamo prestamo in _prestamos)
            {
                <tr>
                    <td>@prestamo.EstudianteId</td>
                    <td>@prestamo.LibroId</td>
                    <td>@prestamo.Fecha_prestamo</td>
                    <td>@prestamo.Fecha_devolucion</td>
                    <td>@prestamo.Estado</td>
                    <td>
                        <button class="btn btn-sm" title="Modificar" @onclick="()=>Modificar(prestamo.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                            </svg>
                        </button>
                        <button class="btn btn-sm" title="Eliminar" @onclick="()=>Eliminar(prestamo)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
                                <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06m6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528M8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Prestamo>? _prestamos;

    protected override async Task OnInitializedAsync()
    {
        _prestamos = await _repositorio.GetAll();

        var hoy = DateOnly.FromDateTime(DateTime.Today);
        // aqui
        foreach (var prestamo in _prestamos)
        {
            if (prestamo.Estado == "Pendiente" && hoy > prestamo.Fecha_devolucion)
            {
                prestamo.Estado = "Atrasado";
                await _repositorio.Update(prestamo.Id, prestamo);
            }
        }
        //aqui
    }

    private async void Eliminar(Prestamo prestamo)
    {
        await _repositorio.Delete(prestamo.Id);
        _prestamos!.Remove(prestamo);
        StateHasChanged();
    }

    private void Modificar(int id)
    {
        _navigator.NavigateTo($"/prestamos/editar/{id}");
    }
}